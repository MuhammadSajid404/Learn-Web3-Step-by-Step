// require web3
const Web3 = require('web3');

//rpc url > infura ropsten
const rpcURL = "https://ropsten.infura.io/v3/f1d63286d3764c0388bf0c284b7e0137";

//establishing connection
const web3 = new Web3(rpcURL);

// deployed contract address
const address = "0x63Fa6C6A933F4fCC6aC17b5a73F0D3CFDeA55836";

//contract ABI code
const abi = [
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_addAmount",
				"type": "uint256"
			}
		],
		"name": "getAmount",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getAmountA",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "addAmount",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "subAmount",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	}
];

// return contract instance
const contract = new web3.eth.Contract(abi, address);

//console.log("contract: ", contract);
//console.log("Methods: ", contract.methods);
//console.log("GetAmount: ", contract.methods.getAmount);
//console.log("GetAmountA: ", contract.methods.getAmountA());

contract.methods.getAmountA().call((err, result) => {
    // just to fetch/read data from Blockchain 
    console.log("GetamountA: ", result);
});
